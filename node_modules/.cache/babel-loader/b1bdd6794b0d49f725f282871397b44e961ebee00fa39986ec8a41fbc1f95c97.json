{"ast":null,"code":"// import { createReducer } from \"@reduxjs/toolkit\";\n// export const DataReducer = createReducer(\n//   {},\n//   {\n//     DATA_REQUEST: (state) => {\n//       state.loading = true;\n//     },\n//     DATA_SUCCESS: (state, action) => {\n//       state.loading = false;\n//       state.allTickets = action.payload.tickets;\n//       state.allUser = action.payload.users;\n//     },\n//     DATA_FAILURE: (state) => {\n//       state.loading = false;\n//       state.allTickets = [];\n//       state.allUser = [];\n//     },\n//   }\n// );\n// export const SelectDataReducer = createReducer(\n//   {},\n//   {\n//     SELECT_DATA_REQUEST: (state) => {\n//       state.loading = true;\n//       state.selectedData = [];\n//     },\n//     SELECT_DATA_SUCCESS: (state, action) => {\n//       state.loading = false;\n//       state.selectedData = action.payload.selectedData;\n//       state.user = action.payload.user;\n//     },\n//     SELECT_DATA_FAILURE: (state, action) => {\n//       state.loading = false;\n//       state.selectedData = [];\n//       state.message = action.payload.message;\n//     },\n//   }\n// );","map":{"version":3,"names":[],"sources":["/Users/astharane/Desktop/quick-sell/src/Reducers/DataReducer.js"],"sourcesContent":["// import { createReducer } from \"@reduxjs/toolkit\";\n// export const DataReducer = createReducer(\n//   {},\n//   {\n//     DATA_REQUEST: (state) => {\n//       state.loading = true;\n//     },\n//     DATA_SUCCESS: (state, action) => {\n//       state.loading = false;\n//       state.allTickets = action.payload.tickets;\n//       state.allUser = action.payload.users;\n//     },\n//     DATA_FAILURE: (state) => {\n//       state.loading = false;\n//       state.allTickets = [];\n//       state.allUser = [];\n//     },\n//   }\n// );\n// export const SelectDataReducer = createReducer(\n//   {},\n//   {\n//     SELECT_DATA_REQUEST: (state) => {\n//       state.loading = true;\n//       state.selectedData = [];\n//     },\n//     SELECT_DATA_SUCCESS: (state, action) => {\n//       state.loading = false;\n//       state.selectedData = action.payload.selectedData;\n//       state.user = action.payload.user;\n//     },\n//     SELECT_DATA_FAILURE: (state, action) => {\n//       state.loading = false;\n//       state.selectedData = [];\n//       state.message = action.payload.message;\n//     },\n//   }\n// );\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}