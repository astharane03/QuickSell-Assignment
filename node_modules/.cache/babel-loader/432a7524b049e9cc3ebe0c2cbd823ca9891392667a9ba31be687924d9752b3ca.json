{"ast":null,"code":"// // import { createReducer } from \"@reduxjs/toolkit\";\n// // export const DataReducer = createReducer(\n// //   {},\n// //   {\n// //     DATA_REQUEST: (state) => {\n// //       state.loading = true;\n// //     },\n// //     DATA_SUCCESS: (state, action) => {\n// //       state.loading = false;\n// //       state.allTickets = action.payload.tickets;\n// //       state.allUser = action.payload.users;\n// //     },\n// //     DATA_FAILURE: (state) => {\n// //       state.loading = false;\n// //       state.allTickets = [];\n// //       state.allUser = [];\n// //     },\n// //   }\n// // );\n// // export const SelectDataReducer = createReducer(\n// //   {},\n// //   {\n// //     SELECT_DATA_REQUEST: (state) => {\n// //       state.loading = true;\n// //       state.selectedData = [];\n// //     },\n// //     SELECT_DATA_SUCCESS: (state, action) => {\n// //       state.loading = false;\n// //       state.selectedData = action.payload.selectedData;\n// //       state.user = action.payload.user;\n// //     },\n// //     SELECT_DATA_FAILURE: (state, action) => {\n// //       state.loading = false;\n// //       state.selectedData = [];\n// //       state.message = action.payload.message;\n// //     },\n// //   }\n// // );\n\n// import { createReducer } from \"@reduxjs/toolkit\";\n\n// export const DataReducer = createReducer(\n//   {\n//     loading: false,\n//     allTickets: [],\n//     allUser: [],\n//   },\n//   (builder) => {\n//     builder\n//       .addCase(\"DATA_REQUEST\", (state) => {\n//         state.loading = true;\n//       })\n//       .addCase(\"DATA_SUCCESS\", (state, action) => {\n//         state.loading = false;\n//         state.allTickets = action.payload.tickets;\n//         state.allUser = action.payload.users;\n//       })\n//       .addCase(\"DATA_FAILURE\", (state) => {\n//         state.loading = false;\n//         state.allTickets = [];\n//         state.allUser = [];\n//       });\n//   }\n// );\n\n// export const SelectDataReducer = createReducer(\n//   {\n//     loading: false,\n//     selectedData: [],\n//     user: null,\n//     message: \"\",\n//   },\n//   (builder) => {\n//     builder\n//       .addCase(\"SELECT_DATA_REQUEST\", (state) => {\n//         state.loading = true;\n//         state.selectedData = [];\n//       })\n//       .addCase(\"SELECT_DATA_SUCCESS\", (state, action) => {\n//         state.loading = false;\n//         state.selectedData = action.payload.selectedData;\n//         state.user = action.payload.user;\n//       })\n//       .addCase(\"SELECT_DATA_FAILURE\", (state, action) => {\n//         state.loading = false;\n//         state.selectedData = [];\n//         state.message = action.payload.message;\n//       });\n//   }\n// );\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nexport const DataReducer = createReducer({\n  loading: false,\n  allTickets: [],\n  allUser: []\n}, builder => {\n  builder.addCase(\"DATA_REQUEST\", state => {\n    state.loading = true;\n  }).addCase(\"DATA_SUCCESS\", (state, action) => {\n    state.loading = false;\n    state.allTickets = action.payload.tickets;\n    state.allUser = action.payload.users;\n  }).addCase(\"DATA_FAILURE\", state => {\n    state.loading = false;\n    state.allTickets = [];\n    state.allUser = [];\n  });\n});\nexport const SelectDataReducer = createReducer({\n  loading: false,\n  selectedData: [],\n  user: null,\n  message: \"\"\n}, builder => {\n  builder.addCase(\"SELECT_DATA_REQUEST\", state => {\n    state.loading = true;\n    state.selectedData = [];\n  }).addCase(\"SELECT_DATA_SUCCESS\", (state, action) => {\n    state.loading = false;\n    state.selectedData = action.payload.selectedData;\n    state.user = action.payload.user;\n  }).addCase(\"SELECT_DATA_FAILURE\", (state, action) => {\n    state.loading = false;\n    state.selectedData = [];\n    state.message = action.payload.message;\n  });\n});","map":{"version":3,"names":["createReducer","DataReducer","loading","allTickets","allUser","builder","addCase","state","action","payload","tickets","users","SelectDataReducer","selectedData","user","message"],"sources":["/Users/astharane/Desktop/quick-sell/src/Reducers/DataReducer.js"],"sourcesContent":["// // import { createReducer } from \"@reduxjs/toolkit\";\n// // export const DataReducer = createReducer(\n// //   {},\n// //   {\n// //     DATA_REQUEST: (state) => {\n// //       state.loading = true;\n// //     },\n// //     DATA_SUCCESS: (state, action) => {\n// //       state.loading = false;\n// //       state.allTickets = action.payload.tickets;\n// //       state.allUser = action.payload.users;\n// //     },\n// //     DATA_FAILURE: (state) => {\n// //       state.loading = false;\n// //       state.allTickets = [];\n// //       state.allUser = [];\n// //     },\n// //   }\n// // );\n// // export const SelectDataReducer = createReducer(\n// //   {},\n// //   {\n// //     SELECT_DATA_REQUEST: (state) => {\n// //       state.loading = true;\n// //       state.selectedData = [];\n// //     },\n// //     SELECT_DATA_SUCCESS: (state, action) => {\n// //       state.loading = false;\n// //       state.selectedData = action.payload.selectedData;\n// //       state.user = action.payload.user;\n// //     },\n// //     SELECT_DATA_FAILURE: (state, action) => {\n// //       state.loading = false;\n// //       state.selectedData = [];\n// //       state.message = action.payload.message;\n// //     },\n// //   }\n// // );\n\n\n// import { createReducer } from \"@reduxjs/toolkit\";\n\n// export const DataReducer = createReducer(\n//   {\n//     loading: false,\n//     allTickets: [],\n//     allUser: [],\n//   },\n//   (builder) => {\n//     builder\n//       .addCase(\"DATA_REQUEST\", (state) => {\n//         state.loading = true;\n//       })\n//       .addCase(\"DATA_SUCCESS\", (state, action) => {\n//         state.loading = false;\n//         state.allTickets = action.payload.tickets;\n//         state.allUser = action.payload.users;\n//       })\n//       .addCase(\"DATA_FAILURE\", (state) => {\n//         state.loading = false;\n//         state.allTickets = [];\n//         state.allUser = [];\n//       });\n//   }\n// );\n\n// export const SelectDataReducer = createReducer(\n//   {\n//     loading: false,\n//     selectedData: [],\n//     user: null,\n//     message: \"\",\n//   },\n//   (builder) => {\n//     builder\n//       .addCase(\"SELECT_DATA_REQUEST\", (state) => {\n//         state.loading = true;\n//         state.selectedData = [];\n//       })\n//       .addCase(\"SELECT_DATA_SUCCESS\", (state, action) => {\n//         state.loading = false;\n//         state.selectedData = action.payload.selectedData;\n//         state.user = action.payload.user;\n//       })\n//       .addCase(\"SELECT_DATA_FAILURE\", (state, action) => {\n//         state.loading = false;\n//         state.selectedData = [];\n//         state.message = action.payload.message;\n//       });\n//   }\n// );\n\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const DataReducer = createReducer(\n  {\n    loading: false,\n    allTickets: [],\n    allUser: [],\n  },\n  (builder) => {\n    builder\n      .addCase(\"DATA_REQUEST\", (state) => {\n        state.loading = true;\n      })\n      .addCase(\"DATA_SUCCESS\", (state, action) => {\n        state.loading = false;\n        state.allTickets = action.payload.tickets;\n        state.allUser = action.payload.users;\n      })\n      .addCase(\"DATA_FAILURE\", (state) => {\n        state.loading = false;\n        state.allTickets = [];\n        state.allUser = [];\n      });\n  }\n);\n\nexport const SelectDataReducer = createReducer(\n  {\n    loading: false,\n    selectedData: [],\n    user: null,\n    message: \"\",\n  },\n  (builder) => {\n    builder\n      .addCase(\"SELECT_DATA_REQUEST\", (state) => {\n        state.loading = true;\n        state.selectedData = [];\n      })\n      .addCase(\"SELECT_DATA_SUCCESS\", (state, action) => {\n        state.loading = false;\n        state.selectedData = action.payload.selectedData;\n        state.user = action.payload.user;\n      })\n      .addCase(\"SELECT_DATA_FAILURE\", (state, action) => {\n        state.loading = false;\n        state.selectedData = [];\n        state.message = action.payload.message;\n      });\n  }\n);\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAO,MAAMC,WAAW,GAAGD,aAAa,CACtC;EACEE,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE;AACX,CAAC,EACAC,OAAO,IAAK;EACXA,OAAO,CACJC,OAAO,CAAC,cAAc,EAAGC,KAAK,IAAK;IAClCA,KAAK,CAACL,OAAO,GAAG,IAAI;EACtB,CAAC,CAAC,CACDI,OAAO,CAAC,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC1CD,KAAK,CAACL,OAAO,GAAG,KAAK;IACrBK,KAAK,CAACJ,UAAU,GAAGK,MAAM,CAACC,OAAO,CAACC,OAAO;IACzCH,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACC,OAAO,CAACE,KAAK;EACtC,CAAC,CAAC,CACDL,OAAO,CAAC,cAAc,EAAGC,KAAK,IAAK;IAClCA,KAAK,CAACL,OAAO,GAAG,KAAK;IACrBK,KAAK,CAACJ,UAAU,GAAG,EAAE;IACrBI,KAAK,CAACH,OAAO,GAAG,EAAE;EACpB,CAAC,CAAC;AACN,CACF,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAGZ,aAAa,CAC5C;EACEE,OAAO,EAAE,KAAK;EACdW,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE;AACX,CAAC,EACAV,OAAO,IAAK;EACXA,OAAO,CACJC,OAAO,CAAC,qBAAqB,EAAGC,KAAK,IAAK;IACzCA,KAAK,CAACL,OAAO,GAAG,IAAI;IACpBK,KAAK,CAACM,YAAY,GAAG,EAAE;EACzB,CAAC,CAAC,CACDP,OAAO,CAAC,qBAAqB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACjDD,KAAK,CAACL,OAAO,GAAG,KAAK;IACrBK,KAAK,CAACM,YAAY,GAAGL,MAAM,CAACC,OAAO,CAACI,YAAY;IAChDN,KAAK,CAACO,IAAI,GAAGN,MAAM,CAACC,OAAO,CAACK,IAAI;EAClC,CAAC,CAAC,CACDR,OAAO,CAAC,qBAAqB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACjDD,KAAK,CAACL,OAAO,GAAG,KAAK;IACrBK,KAAK,CAACM,YAAY,GAAG,EAAE;IACvBN,KAAK,CAACQ,OAAO,GAAGP,MAAM,CAACC,OAAO,CAACM,OAAO;EACxC,CAAC,CAAC;AACN,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}